% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TileDBArray.R
\name{TileDBArray}
\alias{TileDBArray}
\alias{TileDBArraySeed}
\alias{TileDBArraySeed-class}
\alias{TileDBArray-class}
\alias{show,TileDBArray-method}
\alias{extract_array,TileDBArray-method}
\alias{DelayedArray,TileDBArraySeed-method}
\title{Delayed TileDB arrays}
\description{
The TileDBArray class provides a \linkS4class{DelayedArray} backend for TileDB arrays (sparse and dense).
}
\section{Constructing a TileDBArray}{

\code{TileDBArray(x, attr)} returns a TileDBArray object given:
\itemize{
\item \code{x}, a URI path to a TileDB backend, most typically a directory.
\item \code{attr}, a string specifying the attribute to represent in the array.
Defaults to the first attribute.
}
Alternatively, \code{x} can be a TileDBArraySeed object, in which case \code{attr} is ignored.

\code{TileDBArraySeed(x, attr)} returns a TileDBArraySeed
with the same arguments as described for \code{TileDBArray}.
If \code{x} is already a TileDBArraySeed, it is returned
directly without further modification.

\code{\link{DelayedArray}(x)} returns a TileDBArray object
given \code{x}, a TileDBArraySeed.

In all cases, two-dimensional arrays will automatically generate a TileDBMatrix,
a subclass of the TileDBArray.
}

\section{Available operations}{

\code{\link{extract_array}(x, index)} will return an ordinary 
array corresponding to the TileDBArray \code{x} subsetted
to the indices in \code{index}. 
The latter should be a list of length equal to the number of 
dimensions in \code{x}.

All operations supported by \linkS4class{DelayedArray} objects are 
also available for TileDBArray objects.
}

\examples{
data <- matrix(rpois(10000, 5), nrow=100, ncol=100)
B <- as(data, "TileDBArray")
B

# Apply typical DelayedArray operations:
as.matrix(B[1:10,1:10])
B \%*\% runif(ncol(B))

}
\author{
Aaron Lun
}
